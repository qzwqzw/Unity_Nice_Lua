<%
require "TemplateCommon"
%>
--[[
-- 模型层
-- 注意：
-- 1、成员变量预先在OnCreate、OnEnable函数声明，提高代码可读性
-- 2、OnCreate内放窗口生命周期内保持的成员变量，窗口销毁时才会清理
-- 3、OnEnable内放窗口打开时才需要的成员变量，窗口关闭后及时清理
--]]

local <%=viewmodel_class_name%> = BaseClass("<%=viewmodel_class_name%>", UIBaseViewModel)
local base = UIBaseViewModel

-- 创建
local function OnCreate(self)
	base.OnCreate(self)
	-- 窗口生命周期内保持的成员变量放这
	--self.app_version_text = BindableProperty.New("1.0.1")

end

-- 打开
local function OnEnable(self)
	base.OnEnable(self)
	-- 窗口关闭时可以清理的成员变量放这

	self:OnRefresh()
end

-- 刷新全部数据
local function OnRefresh(self)


end

-- 监听
local function OnAddListener(self)
	base.OnAddListener(self)
	--添加监听
	--self:AddDataListener(DataMessageNames.ON_LOGIN_SERVER_ID_CHG, OnSelectedSvrChg)
end

local function OnRemoveListener(self)
	base.OnRemoveListener(self)
	-- 移除监听
	--self:RemoveDataListener(DataMessageNames.ON_LOGIN_SERVER_ID_CHG, OnSelectedSvrChg)
end

-- 关闭
local function OnDisable(self)
	base.OnDisable(self)
	-- 清理成员变量
	
end

-- 销毁
local function OnDestroy(self)
	base.OnDestroy(self)
	-- 清理成员变量
	--self.app_version_text = nil
end

<%=viewmodel_class_name%>.OnCreate = OnCreate
<%=viewmodel_class_name%>.OnEnable = OnEnable
<%=viewmodel_class_name%>.OnDisable = OnDisable
<%=viewmodel_class_name%>.OnRefresh = OnRefresh
<%=viewmodel_class_name%>.OnAddListener = OnAddListener
<%=viewmodel_class_name%>.OnRemoveListener = OnRemoveListener
<%=viewmodel_class_name%>.OnDestroy = OnDestroy

return <%=viewmodel_class_name%>